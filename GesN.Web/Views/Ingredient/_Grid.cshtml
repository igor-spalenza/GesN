@using GesN.Web.Models.ViewModels.Production
@using GesN.Web.Models.Enumerators
@model IEnumerable<IngredientDetailsViewModel>

<!-- Barra de Pesquisa -->
<div class="d-flex gap-2">
    <div class="col-md-4">
        <button type="button" class="btn btn-outline-secondary w-100" onclick="ingredientsManager.carregarListaIngredients()">
            <i class="bi bi-arrow-clockwise"></i>
        </button>
    </div>
</div>

<!-- Tabela de Ingredientes -->
@if (Model.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-hover" id="ingredientsTable">
            <thead class="table-dark">
                <tr>
                    <th>Nome</th>
                    <th>Unidade</th>
                    <th>Custo/Unidade</th>
                    <th>Estoque</th>
                    <th>Fornecedor</th>
                    <th>Status</th>
                    <th>Criado em</th>
                    <th width="120">Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ingredient in Model)
                {
                    <tr>
                        <td>
                            <strong>@ingredient.Name</strong>
                            @if (!string.IsNullOrWhiteSpace(ingredient.Description))
                            {
                                <br />
                                <small class="text-muted">
                                    @if (ingredient.Description.Length > 30)
                                    {
                                        <span title="@ingredient.Description">@ingredient.Description.Substring(0, 30)...</span>
                                    }
                                    else
                                    {
                                        @ingredient.Description
                                    }
                                </small>
                            }
                        </td>
                        <td>
                            <span class="badge bg-info">@EnumHelper.GetDescription(ingredient.Unit)</span>
                        </td>
                        <td>
                            <strong>@ingredient.CostPerUnit.ToString("C")</strong>
                        </td>
                        <td>
                            <div>
                                <strong>@ingredient.CurrentStock.ToString("N2")</strong>
                                @if (ingredient.CurrentStock <= ingredient.MinStock)
                                {
                                    <br />
                                    <span class="badge bg-warning text-dark">Estoque Baixo</span>
                                }
                                else
                                {
                                    <br />
                                    <small class="text-muted">Min: @ingredient.MinStock.ToString("N2")</small>
                                }
                            </div>
                        </td>
                        <td>
                            @if (!string.IsNullOrWhiteSpace(ingredient.SupplierName))
                            {
                                @ingredient.SupplierName
                            }
                            else
                            {
                                <span class="text-muted">Não informado</span>
                            }
                        </td>
                        <td>
                            @if (ingredient.IsActive)
                            {
                                <span class="badge bg-success">Ativo</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inativo</span>
                            }
                        </td>
                        <td>@ingredient.CreatedAt.ToString("dd/MM/yyyy")</td>
                        <td>
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-outline-primary btn-sm" 
                                        onclick="ingredientsManager.verDetalhes('@ingredient.Id')" 
                                        title="Visualizar">
                                    <i class="bi bi-eye"></i>
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" 
                                        onclick="ingredientsManager.editarIngredient('@ingredient.Id')" 
                                        title="Editar">
                                    <i class="bi bi-pencil"></i>
                                </button>
                                <button type="button" class="btn btn-outline-danger btn-sm" 
                                        onclick="ingredientsManager.excluirIngredient('@ingredient.Id', '@ingredient.Name')" 
                                        title="Excluir">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="text-center py-5">
        <div class="mb-3">
            <i class="bi bi-egg-fried display-1 text-muted"></i>
        </div>
        <h5 class="text-muted">Nenhum ingrediente encontrado</h5>
        <p class="text-muted">Comece criando seu primeiro ingrediente!</p>
        <button type="button" class="btn btn-primary" onclick="ingredientsManager.novoIngredientModal()">
            <i class="bi bi-plus"></i> Criar Primeiro Ingrediente
        </button>
    </div>
}

@if (Model.Any())
{
    <!-- Informações da Tabela -->
    <div class="row mt-3">
        <div class="col-md-6">
            <small class="text-muted">
                Mostrando @Model.Count() ingrediente(s)
            </small>
        </div>
        <div class="col-md-6 text-end">
            <small class="text-muted">
                <i class="bi bi-clock"></i> Atualizado em @DateTime.Now.ToString("dd/MM/yyyy HH:mm")
            </small>
        </div>
    </div>
} 