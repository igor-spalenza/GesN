@model GesN.Web.Models.ViewModels.Production.DemandIndexViewModel

<div class="table-responsive">
    <table class="table table-bordered table-hover" id="demandsTable">
        <thead class="table-dark">
            <tr>
                <th>Produto</th>
                <th>Quantidade</th>
                <th>Status</th>
                <th>Data Prevista</th>
                <th>Progresso</th>
                <th>Criado em</th>
                <th width="200px">Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Demands != null && Model.Demands.Any())
            {
                @foreach (var demand in Model.Demands)
                {
                    <tr class="@(demand.IsOverdue ? "table-danger" : "")">
                        <td>
                            <div>
                                <strong>@demand.ProductName</strong>
                                @if (!string.IsNullOrEmpty(demand.ProductSKU))
                                {
                                    <br><small class="text-muted">SKU: @demand.ProductSKU</small>
                                }
                            </div>
                        </td>
                        <td>
                            <span class="fw-bold">@demand.Quantity</span>
                        </td>
                        <td>
                            <span class="@demand.StatusCssClass">@demand.StatusDisplay</span>
                            @if (demand.IsOverdue)
                            {
                                <br><small class="text-danger"><i class="fas fa-exclamation-triangle"></i> Atrasado</small>
                            }
                        </td>
                        <td>
                            @if (demand.ExpectedDate.HasValue)
                            {
                                <span>@demand.ExpectedDateFormatted</span>
                                @if (demand.DaysRemaining > 0)
                                {
                                    <br><small class="text-info">@demand.DaysRemaining dias restantes</small>
                                }
                                else if (demand.DaysRemaining < 0)
                                {
                                    <br><small class="text-danger">@Math.Abs(demand.DaysRemaining) dias atrasado</small>
                                }
                            }
                            else
                            {
                                <span class="text-muted">Não definida</span>
                            }
                        </td>
                        <td>
                            <div>
                                <span>@demand.ProgressStatus</span>
                                @if (demand.StartedAt.HasValue)
                                {
                                    <br><small class="text-muted">Iniciado: @demand.StartedAt.Value.ToString("dd/MM")</small>
                                }
                                @if (demand.CompletedAt.HasValue)
                                {
                                    <br><small class="text-success">Concluído: @demand.CompletedAt.Value.ToString("dd/MM")</small>
                                }
                            </div>
                        </td>
                        <td>
                            <span>@demand.CreatedAt.ToString("dd/MM/yyyy")</span>
                            <br><small class="text-muted">@demand.CreatedAt.ToString("HH:mm")</small>
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <!-- Dropdown de Ações -->
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" 
                                            data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fas fa-cog"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <!-- Visualizar -->
                                        <li>
                                            <a class="dropdown-item" href="@Url.Action("Details", new { id = demand.Id })" 
                                               target="_blank">
                                                <i class="fas fa-eye"></i> Visualizar
                                            </a>
                                        </li>
                                        
                                        <!-- Editar -->
                                        @if (demand.CanEdit)
                                        {
                                            <li>
                                                <button type="button" class="dropdown-item demand-edit-btn" 
                                                        data-id="@demand.Id">
                                                    <i class="fas fa-edit"></i> Editar
                                                </button>
                                            </li>
                                        }

                                        <li><hr class="dropdown-divider"></li>

                                        <!-- Ações de Status -->
                                        @if (demand.CanConfirm)
                                        {
                                            <li>
                                                <button type="button" class="dropdown-item text-info demand-confirm-btn" 
                                                        data-id="@demand.Id">
                                                    <i class="fas fa-check"></i> Confirmar
                                                </button>
                                            </li>
                                        }

                                        @if (demand.CanMarkAsProduced)
                                        {
                                            <li>
                                                <button type="button" class="dropdown-item text-primary demand-produced-btn" 
                                                        data-id="@demand.Id">
                                                    <i class="fas fa-cogs"></i> Marcar como Produzido
                                                </button>
                                            </li>
                                        }

                                        @if (demand.CanMarkAsEnding)
                                        {
                                            <li>
                                                <button type="button" class="dropdown-item text-secondary demand-ending-btn" 
                                                        data-id="@demand.Id">
                                                    <i class="fas fa-boxes"></i> Marcar como Finalizando
                                                </button>
                                            </li>
                                        }

                                        @if (demand.CanMarkAsDelivered)
                                        {
                                            <li>
                                                <button type="button" class="dropdown-item text-success demand-delivered-btn" 
                                                        data-id="@demand.Id">
                                                    <i class="fas fa-truck"></i> Marcar como Entregue
                                                </button>
                                            </li>
                                        }

                                        @if (demand.CanDelete)
                                        {
                                            <li><hr class="dropdown-divider"></li>
                                            <li>
                                                <button type="button" class="dropdown-item text-danger demand-delete-btn" 
                                                        data-id="@demand.Id" data-name="@demand.ProductName">
                                                    <i class="fas fa-trash"></i> Excluir
                                                </button>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center text-muted py-4">
                        <i class="fas fa-inbox fa-2x mb-2"></i>
                        <br>Nenhuma demanda encontrada.
                        <br>
                        <button type="button" class="btn btn-primary btn-sm mt-2" onclick="Demand.showCreateModal()">
                            <i class="fas fa-plus"></i> Criar Nova Demanda
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Paginação -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Paginação de demandas" class="mt-3">
        <ul class="pagination justify-content-center">
            <!-- Primeira página -->
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = Model.PageSize })">
                    <i class="fas fa-angle-double-left"></i>
                </a>
            </li>

            <!-- Página anterior -->
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize })">
                    <i class="fas fa-angle-left"></i>
                </a>
            </li>

            <!-- Páginas numeradas -->
            @{
                var startPage = Math.Max(1, Model.CurrentPage - 2);
                var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })">
                        @i
                    </a>
                </li>
            }

            <!-- Próxima página -->
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize })">
                    <i class="fas fa-angle-right"></i>
                </a>
            </li>

            <!-- Última página -->
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages, pageSize = Model.PageSize })">
                    <i class="fas fa-angle-double-right"></i>
                </a>
            </li>
        </ul>
    </nav>

    <!-- Informações da paginação -->
    <div class="text-center text-muted">
        <small>
            Exibindo @((Model.CurrentPage - 1) * Model.PageSize + 1) a 
            @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems) 
            de @Model.TotalItems demandas
        </small>
    </div>
} 