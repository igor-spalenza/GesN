@model GesN.Web.Areas.Admin.Controllers.AssignPermissionsViewModel

@{
    ViewData["Title"] = $"Editar Permissões - {Model.RoleName}";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Editar Permissões da Role: @Model.RoleName</h5>
            </div>
            <div class="card-body">
                <form asp-action="AssignPermissions" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="RoleId" />
                    <input type="hidden" asp-for="RoleName" />
                    
                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">Permissões Disponíveis</h6>
                        </div>
                        <div class="card-body">
                            @foreach (var permission in Model.Permissions)
                            {
                                bool isChecked = Model.SelectedPermissions?.Contains(permission) ?? false;
                                string displayName = GetDisplayName(permission);
                                string description = GetDescription(permission);
                                
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="checkbox" name="SelectedPermissions" 
                                           value="@permission" id="perm_@permission.Replace(":", "_")" 
                                           @(isChecked ? "checked" : "")>
                                    <label class="form-check-label" for="perm_@permission.Replace(":", "_")">
                                        @displayName
                                    </label>
                                    <small class="form-text text-muted d-block">@description</small>
                                </div>
                            }
                        </div>
                    </div>
                    
                    <div class="form-group mt-4">
                        <button type="submit" class="btn btn-primary">Salvar Alterações</button>
                        <a asp-action="Details" asp-route-id="@Model.RoleId" class="btn btn-secondary">Cancelar</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Dependências entre permissões
        document.addEventListener('DOMContentLoaded', function() {
            // Quando gerenciar clientes é selecionado, visualizar clientes também deve ser
            document.getElementById('perm_clientes_gerenciar')?.addEventListener('change', function() {
                if (this.checked) {
                    document.getElementById('perm_clientes_visualizar').checked = true;
                }
            });
            
            // Quando gerenciar pedidos é selecionado, visualizar pedidos também deve ser
            document.getElementById('perm_pedidos_gerenciar')?.addEventListener('change', function() {
                if (this.checked) {
                    document.getElementById('perm_pedidos_visualizar').checked = true;
                }
            });
        });
    </script>
}

@functions {
    string GetDisplayName(string permission)
    {
        switch (permission)
        {
            case "usuarios:gerenciar":
                return "Gerenciar Usuários";
            case "clientes:visualizar":
                return "Visualizar Clientes";
            case "clientes:gerenciar":
                return "Gerenciar Clientes";
            case "pedidos:visualizar":
                return "Visualizar Pedidos";
            case "pedidos:gerenciar":
                return "Gerenciar Pedidos";
            default:
                return permission;
        }
    }
    
    string GetDescription(string permission)
    {
        switch (permission)
        {
            case "usuarios:gerenciar":
                return "Permite criar, editar, excluir e visualizar usuários.";
            case "clientes:visualizar":
                return "Permite visualizar informações de clientes.";
            case "clientes:gerenciar":
                return "Permite criar, editar e excluir clientes.";
            case "pedidos:visualizar":
                return "Permite visualizar informações de pedidos.";
            case "pedidos:gerenciar":
                return "Permite criar, editar e excluir pedidos.";
            default:
                return "Sem descrição disponível.";
        }
    }
} 